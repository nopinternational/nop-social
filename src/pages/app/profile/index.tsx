/* eslint-disable @typescript-eslint/no-unsafe-assignment */
import { type NextPage } from "next";
import Head from "next/head";
import { useSession } from "next-auth/react";
import HighlightText from "~/components/HighlightText";
import SigninButton from "~/components/SigninButton";
import { api } from "~/utils/api";
import { type Profile } from "~/server/api/routers/profileRouter";

const Home: NextPage = () => {
  //const hello = api.example.hello.useQuery({ text: "from tRPC" });

  const { data: sessionData } = useSession();

  const message = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  const profiles = api.profile.getAllProfiles.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  // console.log("profilepage: message=", message);
  //const message = { data: "hardcoded message on data key" }
  const hello = api.example.hello.useQuery({ text: "from tRPC" });
  //const hello = { data: { greeting: "hello-data-key" } }
  //console.log("profilepage: HELLO=", hello);
  console.log("profilepage: profiles.data=", profiles.data);
  const YEAR = new Date().getFullYear()
  // if (profileQuery.isLoading) {
  //   return <div className="w-full max-w-sm rounded-lg border border-gray-200 bg-white shadow dark:border-gray-700 dark:bg-gray-800">Loading...</div>
  // }

  // if (!profileQuery.data) {
  //   return <div className="w-full max-w-sm rounded-lg border border-gray-200 bg-white shadow dark:border-gray-700 dark:bg-gray-800">Loading...</div>
  // }
  const renderProfile = (profile: Profile) => {

    return (
      <div className="flex flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20">
        <h3 className="text-2xl font-bold"><HighlightText>{profile.username}</HighlightText></h3>
        <div className="text-lg">
          <p>{profile.username} √§r ett par som heter <HighlightText>{profile.person1?.name}</HighlightText> & <HighlightText>{profile.person2.name}</HighlightText>,
            dom √§r {YEAR - profile.person1?.born} och {YEAR - profile.person2?.born}√•r.</p>

        </div>
      </div>
    )
  }

  return (
    <>
      <Head>
        <title>Night of Passion</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            V√•ra <HighlightText>h√§rliga</HighlightText> par
          </h1>
          <div className="grid grid-cols-2  sm:grid-cols-2   gap-4 md:gap-8">
            <div className="col-span-2">
              <div className="flex flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20">
                <h3 className="text-2xl font-bold">Par, par, par ‚ù§Ô∏è‚ù§Ô∏è‚ù§Ô∏è</h3>
                <div className="text-lg">
                  Night of Passion √§r fullt av trevliga par. Nedan hittar ni n√•gra av dom üòò
                </div>
              </div>
            </div>

            {profiles.data?.map((profile) => renderProfile(profile))}

          </div>
          <div className="flex flex-col items-center gap-2">
            <SigninButton />
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

