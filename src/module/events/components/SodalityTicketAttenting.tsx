import { useQuery } from "@tanstack/react-query";
import { useSession } from "next-auth/react";
import Link from "next/link";
import { useState } from "react";
import { Card } from "~/components/Card";
import HighlightText from "~/components/HighlightText";
import { Spinner } from "~/components/Spinner";

export const AttendingAndPayWithSodality = ({ ticketUrl }: { ticketUrl: string }) => {

    const [showSpinner, setShowSpinner] = useState(false);
    const [hasPayed, setHasPayed] = useState(false);
    const session = useSession();
    const currentEmail = session.data?.user.email;
    
    const startPollForPayment = () => {
        setShowSpinner(true);
    };

    const lemonPayments = (payments: [{}], currentUserEmail: string) => {
        console.log("lemonPayments", payments, currentEmail);
        const thisUserHasPayed: boolean = payments.filter(p => p.email === currentEmail).length > 0;
        console.log("thisUserHasPayed", thisUserHasPayed);
        if (thisUserHasPayed) {
            setShowSpinner(false);
            setHasPayed(true);

        }

    };
    const fetchPayments = async () => {
        const res = await fetch("http://localhost:3000/api/payments");
        const payments = await res.json();
        console.log("fetchPayments", payments, session);
        lemonPayments(payments, currentEmail);
        return payments;
    };
    const { data, status } = useQuery(["paymets"], fetchPayments, {
        enabled: showSpinner,
        refetchInterval: 2000,
    });

    console.log("status:", status);

    return (
        <div className="grid grid-cols-2  gap-4   sm:grid-cols-2 md:gap-8">
            <div className="col-span-2">
                <Card
                    header={
                        <>
                            V√§lkommen p√• <HighlightText>Cocktailtr√§ff üéâüç∏üçæ</HighlightText>
                        </>
                    }
                >
                    <div className="text-lg ">
                        Nu √§r ni anm√§lda och nedan finns information hur ni betalar f√∂r
                        tr√§ffen. Efter betalningen s√• kommer vi l√§gga till er till tr√§ffen
                        och ni kan d√• se vilka andra som har anm√§lt sig.
                    </div>
                    <div className="text-lg ">
                        Vi kommer att maila ut mer info n√•gra dagar innan tr√§ffen. D√•
                        ber√§ttar vi vilket st√§lle vi ska ses p√•. H√•ll utkik i er mailkorg.
                    </div>
                </Card>
                <Card
                    header={
                        <>
                            <HighlightText>Betala</HighlightText> f√∂r tr√§ffen
                        </>
                    }
                >
                    <div className="whitespace-pre-wrap text-lg">
                        Vi samarbetar med Sodality f√∂r att betala f√∂r cocktailtr√§ffen. Klickan nedan f√∂r att starta betalningen.
                    </div>
                    <div className="flex items-center justify-center">
                        <Link href={"https://www.google.com" || ticketUrl} target="ticketpayment">
                            <button
                                disabled={showSpinner || hasPayed}
                                className="flex items-center gap-3 relative rounded-full bg-green-600 px-8 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
                                onClick={startPollForPayment}>
                                <span>Betala</span>
                            </button>
                        </Link>
                    </div>
                    {showSpinner ? <div><Spinner></Spinner>
                    </div> : null}
                    {hasPayed ?
                        <div className="text-lg text-green-600">Ni har nu betalat f√∂r tr√§ffen  </div> : null}
                </Card>
            </div>
        </div>);

};